"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[20023],{19114:(e,n,t)=>{t.r(n),t.d(n,{comp:()=>i,data:()=>a});var c=t(6254);const o={},i=(0,t(32991).A)(o,[["render",function(e,n){const t=(0,c.g2)("RouteLink");return(0,c.uX)(),(0,c.CE)("div",null,[n[8]||(n[8]=(0,c.Lk)("h1",{id:"sunricher-sr-zg9030f-ps",tabindex:"-1"},[(0,c.Lk)("a",{class:"header-anchor",href:"#sunricher-sr-zg9030f-ps"},[(0,c.Lk)("span",null,"Sunricher SR-ZG9030F-PS")])],-1)),(0,c.Lk)("table",null,[n[6]||(n[6]=(0,c.Lk)("thead",null,[(0,c.Lk)("tr",null,[(0,c.Lk)("th"),(0,c.Lk)("th")])],-1)),(0,c.Lk)("tbody",null,[n[2]||(n[2]=(0,c.Lk)("tr",null,[(0,c.Lk)("td",null,"Model"),(0,c.Lk)("td",null,"SR-ZG9030F-PS")],-1)),(0,c.Lk)("tr",null,[n[1]||(n[1]=(0,c.Lk)("td",null,"Vendor",-1)),(0,c.Lk)("td",null,[(0,c.bF)(t,{to:"/supported-devices/#v=Sunricher"},{default:(0,c.k6)((()=>n[0]||(n[0]=[(0,c.eW)("Sunricher")]))),_:1})])]),n[3]||(n[3]=(0,c.Lk)("tr",null,[(0,c.Lk)("td",null,"Description"),(0,c.Lk)("td",null,"Smart human presence sensor")],-1)),n[4]||(n[4]=(0,c.Lk)("tr",null,[(0,c.Lk)("td",null,"Exposes"),(0,c.Lk)("td",null,"illuminance, occupancy, action")],-1)),n[5]||(n[5]=(0,c.Lk)("tr",null,[(0,c.Lk)("td",null,"Picture"),(0,c.Lk)("td",null,[(0,c.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/SR-ZG9030F-PS.png",alt:"Sunricher SR-ZG9030F-PS"})])],-1))])]),n[9]||(n[9]=(0,c.Lk)("h2",{id:"options",tabindex:"-1"},[(0,c.Lk)("a",{class:"header-anchor",href:"#options"},[(0,c.Lk)("span",null,"Options")])],-1)),(0,c.Lk)("p",null,[(0,c.Lk)("em",null,[(0,c.bF)(t,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,c.k6)((()=>n[7]||(n[7]=[(0,c.eW)("How to use device type specific configuration")]))),_:1})])]),n[10]||(n[10]=(0,c.Fv)('<ul><li><p><code>illuminance_calibration</code>: Calibrates the illuminance value (percentual offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>illuminance_raw</code>: Expose the raw illuminance value. The value must be <code>true</code> or <code>false</code></p></li><li><p><code>no_occupancy_since</code>: Sends a message after the last time no occupancy (occupancy: false) was detected. When setting this for example to [10, 60] a <code>{&quot;no_occupancy_since&quot;: 10}</code> will be send after 10 seconds and a <code>{&quot;no_occupancy_since&quot;: 60}</code> after 60 seconds. The value must be a list of [object Object].</p></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="illuminance-numeric" tabindex="-1"><a class="header-anchor" href="#illuminance-numeric"><span>Illuminance (numeric)</span></a></h3><p>Measured illuminance. Value can be found in the published state on the <code>illuminance</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;illuminance&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The unit of this value is <code>lx</code>.</p><h3 id="occupancy-binary" tabindex="-1"><a class="header-anchor" href="#occupancy-binary"><span>Occupancy (binary)</span></a></h3><p>Indicates whether the device detected occupancy. Value can be found in the published state on the <code>occupancy</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupancy&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. If value equals <code>true</code> occupancy is ON, if <code>false</code> OFF.</p><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p>',8))])}]]),a=JSON.parse('{"path":"/devices/SR-ZG9030F-PS.html","title":"Sunricher SR-ZG9030F-PS control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Sunricher SR-ZG9030F-PS control via MQTT","description":"Integrate your Sunricher SR-ZG9030F-PS via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-02-01T20:02:57.000Z"},"headers":[{"level":2,"title":"Options","slug":"options","link":"#options","children":[]},{"level":2,"title":"Exposes","slug":"exposes","link":"#exposes","children":[{"level":3,"title":"Illuminance (numeric)","slug":"illuminance-numeric","link":"#illuminance-numeric","children":[]},{"level":3,"title":"Occupancy (binary)","slug":"occupancy-binary","link":"#occupancy-binary","children":[]},{"level":3,"title":"Action (enum)","slug":"action-enum","link":"#action-enum","children":[]}]}],"git":{"updatedTime":1739207691000},"filePathRelative":"devices/SR-ZG9030F-PS.md"}')}}]);